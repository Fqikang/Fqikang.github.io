<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Restful CRUD</title>
      <link href="/2020/07/19/Restful-CRUD/"/>
      <url>/2020/07/19/Restful-CRUD/</url>
      
        <content type="html"><![CDATA[<h2 id="1、默认访问首页"><a href="#1、默认访问首页" class="headerlink" title="1、默认访问首页"></a>1、默认访问首页</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能</span></span><br><span class="line"><span class="comment">//@EnableWebMvc   不要接管SpringMVC</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// super.addViewControllers(registry);</span></span><br><span class="line">        <span class="comment">//浏览器发送 /hello 请求来到 success</span></span><br><span class="line">        registry.addViewController(<span class="string">"/hello"</span>).setViewName(<span class="string">"success"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//所有的WebMvcConfigurerAdapter组件都会一起起作用</span></span><br><span class="line">    <span class="meta">@Bean</span> <span class="comment">//将组件注册在容器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebMvcConfigurerAdapter <span class="title">webMvcConfigurerAdapter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        WebMvcConfigurerAdapter adapter = <span class="keyword">new</span> WebMvcConfigurerAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">                registry.addViewController(<span class="string">"/"</span>).setViewName(<span class="string">"login"</span>);</span><br><span class="line">                registry.addViewController(<span class="string">"/index.html"</span>).setViewName(<span class="string">"login"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> adapter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、国际化"><a href="#2、国际化" class="headerlink" title="2、国际化"></a>2、国际化</h2><p><strong>1）、编写国际化配置文件；</strong></p><p>2）、使用ResourceBundleMessageSource管理国际化资源文件</p><p>3）、在页面使用fmt:message取出国际化内容</p><p>步骤：</p><p>1）、编写国际化配置文件，抽取页面需要显示的国际化消息</p><p><img src="https://i.loli.net/2020/07/19/RDBugSh3qnkA5dj.png" alt></p><p>2）、SpringBoot自动配置好了管理国际化资源文件的组件；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.messages"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageSourceAutoConfiguration</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Comma-separated list of basenames (essentially a fully-qualified classpath</span></span><br><span class="line"><span class="comment"> * location), each following the ResourceBundle convention with relaxed support for</span></span><br><span class="line"><span class="comment"> * slash based locations. If it doesn't contain a package qualifier (such as</span></span><br><span class="line"><span class="comment"> * "org.mypackage"), it will be resolved from the classpath root.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String basename = <span class="string">"messages"</span>;  </span><br><span class="line">    <span class="comment">//我们的配置文件可以直接放在类路径下叫messages.properties；</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> MessageSource <span class="title">messageSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ResourceBundleMessageSource messageSource = <span class="keyword">new</span> ResourceBundleMessageSource();</span><br><span class="line"><span class="keyword">if</span> (StringUtils.hasText(<span class="keyword">this</span>.basename)) &#123;</span><br><span class="line">            <span class="comment">//设置国际化资源文件的基础名（去掉语言国家代码的）</span></span><br><span class="line">messageSource.setBasenames(StringUtils.commaDelimitedListToStringArray(</span><br><span class="line">StringUtils.trimAllWhitespace(<span class="keyword">this</span>.basename)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">messageSource.setDefaultEncoding(<span class="keyword">this</span>.encoding.name());</span><br><span class="line">&#125;</span><br><span class="line">messageSource.setFallbackToSystemLocale(<span class="keyword">this</span>.fallbackToSystemLocale);</span><br><span class="line">messageSource.setCacheSeconds(<span class="keyword">this</span>.cacheSeconds);</span><br><span class="line">messageSource.setAlwaysUseMessageFormat(<span class="keyword">this</span>.alwaysUseMessageFormat);</span><br><span class="line"><span class="keyword">return</span> messageSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）、去页面获取国际化的值；</p><p><img src="https://i.loli.net/2020/07/19/uhZgBCjIbJSWmeY.png" alt></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>  <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Signin Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"asserts/css/bootstrap.min.css"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/webjars/bootstrap/4.0.0/css/bootstrap.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"asserts/css/signin.css"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/asserts/css/signin.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-signin"</span> <span class="attr">action</span>=<span class="string">"dashboard.html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"mb-4"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/asserts/img/bootstrap-solid.svg&#125;"</span> <span class="attr">src</span>=<span class="string">"asserts/img/bootstrap-solid.svg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"72"</span> <span class="attr">height</span>=<span class="string">"72"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"h3 mb-3 font-weight-normal"</span> <span class="attr">th:text</span>=<span class="string">"#&#123;login.tip&#125;"</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">th:text</span>=<span class="string">"#&#123;login.username&#125;"</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Username"</span> <span class="attr">th:placeholder</span>=<span class="string">"#&#123;login.username&#125;"</span> <span class="attr">required</span>=<span class="string">""</span> <span class="attr">autofocus</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">th:text</span>=<span class="string">"#&#123;login.password&#125;"</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span> <span class="attr">th:placeholder</span>=<span class="string">"#&#123;login.password&#125;"</span> <span class="attr">required</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox mb-3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"remember-me"</span>/&gt;</span> [[#&#123;login.remember&#125;]]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-primary btn-block"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">th:text</span>=<span class="string">"#&#123;login.btn&#125;"</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"mt-5 mb-3 text-muted"</span>&gt;</span>© 2017-2018<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm"</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：根据浏览器语言设置的信息切换了国际化；</p><p>原理：</p><p>​    国际化Locale（区域信息对象）；LocaleResolver（获取区域信息对象）；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(prefix = <span class="string">"spring.mvc"</span>, name = <span class="string">"locale"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.mvcProperties</span><br><span class="line">.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> FixedLocaleResolver(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">&#125;</span><br><span class="line">AcceptHeaderLocaleResolver localeResolver = <span class="keyword">new</span> AcceptHeaderLocaleResolver();</span><br><span class="line">localeResolver.setDefaultLocale(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line"><span class="keyword">return</span> localeResolver;</span><br><span class="line">&#125;</span><br><span class="line">默认的就是根据请求头带来的区域信息获取Locale进行国际化</span><br></pre></td></tr></table></figure><p>4）、点击链接切换国际化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以在连接上携带区域信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLocaleResolver</span> <span class="keyword">implements</span> <span class="title">LocaleResolver</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Locale <span class="title">resolveLocale</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String l = request.getParameter(<span class="string">"l"</span>);</span><br><span class="line">        Locale locale = Locale.getDefault();</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(l))&#123;</span><br><span class="line">            String[] split = l.split(<span class="string">"_"</span>);</span><br><span class="line">            locale = <span class="keyword">new</span> Locale(split[<span class="number">0</span>],split[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocale</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Locale locale)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、登陆"><a href="#3、登陆" class="headerlink" title="3、登陆"></a>3、登陆</h2><p>开发期间模板引擎页面修改以后，要实时生效</p><p>1）、禁用模板引擎的缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 禁用缓存</span><br><span class="line">spring.thymeleaf.cache&#x3D;false</span><br></pre></td></tr></table></figure><p>2）、页面修改完成以后ctrl+f9：重新编译；</p><p>登陆错误消息的显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span> <span class="attr">th:if</span>=<span class="string">"$&#123;not #strings.isEmpty(msg)&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4、拦截器进行登陆检查"><a href="#4、拦截器进行登陆检查" class="headerlink" title="4、拦截器进行登陆检查"></a>4、拦截器进行登陆检查</h2><p>拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登陆检查，</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="comment">//目标方法执行之前</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Object user = request.getSession().getAttribute(<span class="string">"loginUser"</span>);</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//未登陆，返回登陆页面</span></span><br><span class="line">            request.setAttribute(<span class="string">"msg"</span>,<span class="string">"没有权限请先登陆"</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/index.html"</span>).forward(request,response);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//已登陆，放行请求</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有的WebMvcConfigurerAdapter组件都会一起起作用</span></span><br><span class="line">  <span class="meta">@Bean</span> <span class="comment">//将组件注册在容器</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> WebMvcConfigurerAdapter <span class="title">webMvcConfigurerAdapter</span><span class="params">()</span></span>&#123;</span><br><span class="line">      WebMvcConfigurerAdapter adapter = <span class="keyword">new</span> WebMvcConfigurerAdapter() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">              registry.addViewController(<span class="string">"/"</span>).setViewName(<span class="string">"login"</span>);</span><br><span class="line">              registry.addViewController(<span class="string">"/index.html"</span>).setViewName(<span class="string">"login"</span>);</span><br><span class="line">              registry.addViewController(<span class="string">"/main.html"</span>).setViewName(<span class="string">"dashboard"</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//注册拦截器</span></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">              <span class="comment">//super.addInterceptors(registry);</span></span><br><span class="line">              <span class="comment">//静态资源；  *.css , *.js</span></span><br><span class="line">              <span class="comment">//SpringBoot已经做好了静态资源映射</span></span><br><span class="line">              registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor()).addPathPatterns(<span class="string">"/**"</span>)</span><br><span class="line">                      .excludePathPatterns(<span class="string">"/index.html"</span>,<span class="string">"/"</span>,<span class="string">"/user/login"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> adapter;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="5、CRUD-员工列表"><a href="#5、CRUD-员工列表" class="headerlink" title="5、CRUD-员工列表"></a>5、CRUD-员工列表</h2><p>实验要求：</p><p>1）、RestfulCRUD：CRUD满足Rest风格；</p><p>URI：  /资源名称/资源标识       HTTP请求方式区分对资源CRUD操作</p><table><thead><tr><th></th><th>普通CRUD（uri来区分操作）</th><th>RestfulCRUD</th></tr></thead><tbody><tr><td>查询</td><td>getEmp</td><td>emp—GET</td></tr><tr><td>添加</td><td>addEmp?xxx</td><td>emp—POST</td></tr><tr><td>修改</td><td>updateEmp?id=xxx&amp;xxx=xx</td><td>emp/{id}—PUT</td></tr><tr><td>删除</td><td>deleteEmp?id=1</td><td>emp/{id}—DELETE</td></tr></tbody></table><p>2）、实验的请求架构;</p><table><thead><tr><th>实验功能</th><th>请求URI</th><th>请求方式</th></tr></thead><tbody><tr><td>查询所有员工</td><td>emps</td><td>GET</td></tr><tr><td>查询某个员工(来到修改页面)</td><td>emp/1</td><td>GET</td></tr><tr><td>来到添加页面</td><td>emp</td><td>GET</td></tr><tr><td>添加员工</td><td>emp</td><td>POST</td></tr><tr><td>来到修改页面（查出员工进行信息回显）</td><td>emp/1</td><td>GET</td></tr><tr><td>修改员工</td><td>emp</td><td>PUT</td></tr><tr><td>删除员工</td><td>emp/1</td><td>DELETE</td></tr></tbody></table><p>3）、员工列表：</p><h4 id="thymeleaf公共页面元素抽取"><a href="#thymeleaf公共页面元素抽取" class="headerlink" title="thymeleaf公共页面元素抽取"></a>thymeleaf公共页面元素抽取</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、抽取公共片段</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">"copy"</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2、引入公共片段</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">"~&#123;footer :: copy&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">~&#123;templatename::selector&#125;：模板名::选择器</span><br><span class="line">~&#123;templatename::fragmentname&#125;:模板名::片段名</span><br><span class="line"></span><br><span class="line">3、默认效果：</span><br><span class="line">insert的公共片段在div标签中</span><br><span class="line">如果使用th:insert等属性进行引入，可以不用写~&#123;&#125;：</span><br><span class="line">行内写法可以加上：[[~&#123;&#125;]];[(~&#123;&#125;)]；</span><br></pre></td></tr></table></figure><p>三种引入公共片段的th属性：</p><p><strong>th:insert</strong>：将公共片段整个插入到声明引入的元素中</p><p><strong>th:replace</strong>：将声明引入的元素替换为公共片段</p><p><strong>th:include</strong>：将被引入的片段的内容包含进这个标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">th:fragment</span>=<span class="string">"copy"</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">引入方式</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">"footer :: copy"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"footer :: copy"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:include</span>=<span class="string">"footer :: copy"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">效果</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入片段的时候传入参数： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"col-md-2 d-none d-md-block bg-light sidebar"</span> <span class="attr">id</span>=<span class="string">"sidebar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-sticky"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav flex-column"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link active"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">th:class</span>=<span class="string">"$&#123;activeUri=='main.html'?'nav-link active':'nav-link'&#125;"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/main.html&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-home"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"9 22 9 12 15 12 15 22"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Dashboard <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入侧边栏;传入参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"commons/bar::#sidebar(activeUri='emps')"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6、CRUD-员工添加"><a href="#6、CRUD-员工添加" class="headerlink" title="6、CRUD-员工添加"></a>6、CRUD-员工添加</h2><p>添加页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan@atguigu.com"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span>  <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span>  <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提交的数据格式不对：生日：日期；</p><p>2017-12-12；2017/12/12；2017.12.12；</p><p>日期的格式化；SpringMVC将页面提交的值需要转换为指定的类型;</p><p>2017-12-12—Date； 类型转换，格式化;</p><p>默认日期是按照/的方式；</p><h2 id="7、CRUD-员工修改"><a href="#7、CRUD-员工修改" class="headerlink" title="7、CRUD-员工修改"></a>7、CRUD-员工修改</h2><p>修改添加二合一表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要区分是员工修改还是添加；--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/emp&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--发送put请求修改员工数据--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、SpringMVC中配置HiddenHttpMethodFilter;（SpringBoot自动配置好的）</span></span><br><span class="line"><span class="comment">2、页面创建一个post表单</span></span><br><span class="line"><span class="comment">3、创建一个input项，name="_method";值就是我们指定的请求方式</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"put"</span> <span class="attr">th:if</span>=<span class="string">"$&#123;emp!=null&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">th:if</span>=<span class="string">"$&#123;emp!=null&#125;"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;emp.id&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"lastName"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;emp.lastName&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan@atguigu.com"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;emp.email&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">th:checked</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;emp.gender==1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check form-check-inline"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">th:checked</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;emp.gender==0&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--提交的是部门的id--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"department.id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;dept.id == emp.department.id&#125;"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;dept.id&#125;"</span> <span class="attr">th:each</span>=<span class="string">"dept:$&#123;depts&#125;"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;dept.departmentName&#125;"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"birth"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"zhangsan"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;emp!=null&#125;?$&#123;#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp!=null&#125;?'修改':'添加'"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8、CRUD-员工删除"><a href="#8、CRUD-员工删除" class="headerlink" title="8、CRUD-员工删除"></a>8、CRUD-员工删除</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"emp:$&#123;emps&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.id&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.lastName&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.email&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.gender&#125;==0?'女':'男'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.department.departmentName&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-primary"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/emp/&#125;+$&#123;emp.id&#125;"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">th:attr</span>=<span class="string">"del_uri=@&#123;/emp/&#125;+$&#123;emp.id&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-danger deleteBtn"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".deleteBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//删除当前员工的</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#deleteEmpForm"</span>).attr(<span class="string">"action"</span>,$(<span class="keyword">this</span>).attr(<span class="string">"del_uri"</span>)).submit();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9、结束语"><a href="#9、结束语" class="headerlink" title="9、结束语"></a>9、结束语</h2><p>太懒了，就把尚硅谷的学习资料直接搬来了，自己写了好久才基本上能写出这个项目，写了n多遍，还是有不懂得。我那塑料英语，7秒的记忆，不说了，说多了都是泪。</p><h2 id="10、实验效果"><a href="#10、实验效果" class="headerlink" title="10、实验效果"></a>10、实验效果</h2><p><img src="https://i.loli.net/2020/07/19/vdMtJoBpLfmezyU.png" alt="QQ截图20200719224341"></p>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pstree</title>
      <link href="/2020/07/07/pstree/"/>
      <url>/2020/07/07/pstree/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux进程树查看工具pstree"><a href="#Linux进程树查看工具pstree" class="headerlink" title="Linux进程树查看工具pstree"></a>Linux进程树查看工具pstree</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>帮同学完成一个操作系统的大作业。</p><blockquote><p>　pstree 是 Linux 下的一个用于展示进程树结构的工具，类似于 tree 展示目录树一样，可视化地查看进程的继承关系。pstree 工具其实是 PSmisc 工具集的成员之一，PSmisc 工具集由 4 个实用的 Linux 进程管理工具（通过 Linux 的 /proc 文件系统实现）组成。</p></blockquote><h3 id="一、-实验内容和要求"><a href="#一、-实验内容和要求" class="headerlink" title="一、     实验内容和要求"></a>一、     实验内容和要求</h3><ol><li><p>上机实验名称：打印linux进程树</p></li><li><p>内容及要求：</p><p>pstree 是 Linux 下的一个用于展示进程树结构的工具，类似于 tree 展示目录树一样，可视化地查看进程的继承关系。本实验通过对proc下的数字目录的读取，获得相应进程信息后，模拟打印出类似pstree的树。</p></li></ol><blockquote><p>补充/proc目录下存放哪些文件？</p><p>​        Linux 内核提供了一种通过 /proc 文件系统，在运行时访问内核内部数据结构、改变内核设置的机制。proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。</p><p>　　用户和应用程序可以通过proc得到系统的信息，并可以改变内核的某些参数。由于系统的信息，如进程，是动态改变的，所以用户或应用程序读取proc文件时，proc文件系统是动态从系统内核读出所需信息并提交的。下面列出的这些文件或子文件夹，并不是都是在你的系统中存在，这取决于你的内核配置和装载的模块。另外，在/proc下还有三个很重要的目录：net，scsi和sys。 Sys目录是可写的，可以通过它来访问或修改内核的参数，而net和scsi则依赖于内核配置。例如，如果系统不支持scsi，则scsi 目录不存在。</p><p>　　除了以上介绍的这些，还有的是一些以数字命名的目录，它们是进程目录。系统中当前运行的每一个进程都有对应的一个目录在/proc下，以进程的 PID号为目录名，它们是读取进程信息的接口。而self目录则是读取进程本身的信息接口，是一个link。</p></blockquote><h3 id="二、-主要的数据结构"><a href="#二、-主要的数据结构" class="headerlink" title="二、 主要的数据结构"></a>二、 主要的数据结构</h3><p>​        老师给了两个程序，一个是PcbInfoReader,另一个是PcbInfo。PcbInfo用来存放要打印的信息。本实验设计了一个TreeNode结点类，一个用来存放data数据，一个用来存放孩子链。data数据是PcbInfo类，这个比较容易想到，因为要建一棵树，用来打印PcbInfo信息，就把PcbInfo做为树的结点，所以作为了数据。另一个孩子链表是，后来在构建树的时候加上去的。在构造树的时候，先是有一个root结点，然后遍历PcbInfo的list数组，找出根结点的子结，也就是Ppid不存在的。然后在这些子结点的基础上，再和其他结点的Ppid,做对比。这时候后就要确切地知道根结点的所有子结点。这时候就想到建立一个兄弟链。</p><pre><code>有了树的结点类，自然有一个树的类，树的构造类设置了一个PcbInfo值为空的root结点。然后其他结点，运用TreeNode的构造方法构造就行了。</code></pre><h3 id="三、-关键功能和核心逻辑描述"><a href="#三、-关键功能和核心逻辑描述" class="headerlink" title="三、 关键功能和核心逻辑描述"></a>三、 关键功能和核心逻辑描述</h3><p>​        本实验核心一是将PcbInfo的信息从文件中，读取出来，这部分老师已经给出了代码，其中写了一个readFromDir，利用File.list（）返回指定路径目录下的所有文件及目录。然后readNumericDir中将刚刚返回的文件的目录全都保存起来，其中筛选出只是目录的，因为，在proc下有许多数字目录的文件夹，在数字目录文件夹下才有status文件。最后在readProcessInfoFromFile函数中，建立了一个字符输入流，将文件里的内容读了出来，然后以冒号分割字符串，根据前面的关键字找出想要的对应的值。</p><pre><code>打印树的toString方法，利用递归调用。</code></pre><p>​        </p><h3 id="四、源码展示"><a href="#四、源码展示" class="headerlink" title="四、源码展示"></a>四、源码展示</h3><p>PcbInfo类（根据要打印信息的建的类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pstree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PcbInfo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pid;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ppid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PcbInfo</span><span class="params">(<span class="keyword">int</span> pid, <span class="keyword">int</span> ppid, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">        <span class="keyword">this</span>.ppid = ppid;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PcbInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPid</span><span class="params">(<span class="keyword">int</span> pid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPpid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ppid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPpid</span><span class="params">(<span class="keyword">int</span> ppid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ppid = ppid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PcbInfoReader类（）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pstree;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PcbInfoReader</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断所给的是不是文件夹，不是会有相应的报错，是的话返回该路径下的所有文件及目录</span></span><br><span class="line"> <span class="keyword">private</span> String[] readFromDir(String dirname) &#123;  </span><br><span class="line">       <span class="keyword">if</span> (!dirname.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(dirname + <span class="string">" is not an absolute directory name"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; ret = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        File dir = <span class="keyword">new</span> File(dirname);  <span class="comment">//疑惑1</span></span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(dirname + <span class="string">" not exsits"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!dir.isDirectory()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(dirname + <span class="string">" is not a directory"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dir.list(); <span class="comment">//返回该路径下的所有文件及目录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] readNumericDir(String dirname) &#123;  <span class="comment">//筛选出数字目录</span></span><br><span class="line">        List&lt;String&gt; list1 = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        String[] files = readFromDir(dirname);</span><br><span class="line">        <span class="keyword">for</span> (String file : files) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNumeric(file)) &#123;</span><br><span class="line">                File tmp = <span class="keyword">new</span> File(dirname + <span class="string">"/"</span> + file);</span><br><span class="line">                <span class="keyword">if</span> (tmp.isDirectory()) &#123;</span><br><span class="line">                    list1.add(file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] ret = <span class="keyword">new</span> String[list1.size()];</span><br><span class="line">        list1.toArray(ret);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isNumeric</span><span class="params">(String str)</span> </span>&#123;  <span class="comment">//正则表达式，判断是不是目录</span></span><br><span class="line">        Pattern pattern = Pattern.compile(<span class="string">"[1-9][0-9]*"</span>);</span><br><span class="line">        Matcher m = pattern.matcher(str);</span><br><span class="line">        <span class="keyword">return</span> m.matches();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PcbInfo <span class="title">readProcessInfoFromFile</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!filename.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(filename + <span class="string">" is not an absolute path name"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filename);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(filename + <span class="string">" not exsits"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        PcbInfo pcb = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pcb = <span class="keyword">new</span> PcbInfo();</span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(file));</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                String str = reader.readLine();</span><br><span class="line">                <span class="keyword">if</span> (str == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String[] tmp = splitStr(str, <span class="string">":"</span>);</span><br><span class="line">                String key = tmp[<span class="number">0</span>];</span><br><span class="line">                String value = tmp[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (key.equalsIgnoreCase(<span class="string">"Name"</span>)) &#123;</span><br><span class="line">                    pcb.setName(value);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.equalsIgnoreCase(<span class="string">"Pid"</span>)) &#123;</span><br><span class="line">                    pcb.setPid(Integer.parseInt(value));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.equalsIgnoreCase(<span class="string">"PPid"</span>)) &#123;</span><br><span class="line">                    pcb.setPpid(Integer.parseInt(value));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"file reading error "</span> + ex.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pcb;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] splitStr(String str, String separator) &#123;</span><br><span class="line">        String[] tmp = str.split(separator);</span><br><span class="line">        String[] ret = <span class="keyword">new</span> String[<span class="number">2</span>];</span><br><span class="line">        ret[<span class="number">0</span>] = tmp[<span class="number">0</span>].trim();</span><br><span class="line">        ret[<span class="number">1</span>] = tmp[<span class="number">1</span>].trim();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newTree类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pstree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span>&lt;<span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> T data;                       <span class="comment">//数据区域</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;TreeNode&lt;T&gt;&gt;  childs;   <span class="comment">//孩子链</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(T data, List&lt;TreeNode&lt;T&gt;&gt; childs)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.childs = <span class="keyword">new</span> ArrayList&lt;TreeNode&lt;T&gt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(T data)</span>          </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(data, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">()</span>          </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> List&lt;TreeNode&lt;T&gt;&gt; getChilds() &#123;</span><br><span class="line"><span class="keyword">return</span> childs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChild</span><span class="params">(List&lt;TreeNode&lt;T&gt;&gt; childs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.childs = childs;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">newTree</span> </span>&#123;  <span class="comment">//树结构</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode&lt;PcbInfo&gt; root; <span class="comment">//树的根节点，里面存放PcbInfo</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">newTree</span><span class="params">()</span> </span>&#123;  <span class="comment">//无参构造方法，在root中放一个空的PcbInfo</span></span><br><span class="line">root = <span class="keyword">new</span> TreeNode&lt;PcbInfo&gt;(<span class="keyword">new</span> PcbInfo());</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode&lt;PcbInfo&gt; <span class="title">getRoot</span><span class="params">()</span> </span>&#123;  <span class="comment">//返回root结点</span></span><br><span class="line"> <span class="keyword">return</span> root;  </span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> newTree <span class="title">createTree</span><span class="params">(List&lt;PcbInfo&gt; lists)</span>  <span class="comment">//构造树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(lists == <span class="keyword">null</span> )</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">newTree tree = <span class="keyword">new</span> newTree(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(PcbInfo list:lists) <span class="comment">//遍历每一个PcbInfo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(list.getPpid() == <span class="number">0</span>) <span class="comment">//如果Ppid是0，就是root结点的子节点</span></span><br><span class="line">&#123;</span><br><span class="line">root.childs.add(<span class="keyword">new</span> TreeNode&lt;PcbInfo&gt;(list));</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;  <span class="comment">//否则，就是root子节点的子节点</span></span><br><span class="line">addNode(list,root); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addNode</span><span class="params">(PcbInfo node,TreeNode&lt;PcbInfo&gt; root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(TreeNode&lt;PcbInfo&gt; allChild: root.childs)  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(allChild.getData().getPid() == node.getPpid())  <span class="comment">//如果是root子节点的子节点</span></span><br><span class="line">&#123;</span><br><span class="line">allChild.childs.add(<span class="keyword">new</span> TreeNode&lt;PcbInfo&gt;(node));</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">    <span class="comment">//不是root子节点的子节点，就是root子节点的子节点的子节点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(allChild.childs!=<span class="keyword">null</span> &amp;&amp; allChild.getChilds().size()&gt;<span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">addNode(node, allChild);  <span class="comment">//递归操作</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// toString打印树</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span>                  </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"pstree \n "</span>+toString(root,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">toString</span><span class="params">(TreeNode&lt;PcbInfo&gt; p, String tab)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p==<span class="keyword">null</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(TreeNode&lt;PcbInfo&gt; q:p.childs)</span><br><span class="line">        &#123;</span><br><span class="line">        str =str+tab+q.data.getName().toString()+<span class="string">"["</span>+q.data.getPid()+<span class="string">"] "</span>+<span class="string">"\n"</span> + toString(q,tab+<span class="string">"        |-"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pstree;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        PcbInfoReader reader = <span class="keyword">new</span> PcbInfoReader();</span><br><span class="line">        String dir = <span class="string">"/proc/"</span>;</span><br><span class="line">        String[] files = reader.readNumericDir(dir);</span><br><span class="line">        List&lt;PcbInfo&gt; tree1=<span class="keyword">new</span> ArrayList&lt;PcbInfo&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String file : files) &#123;</span><br><span class="line">            PcbInfo info = <span class="keyword">new</span> PcbInfoReader().readProcessInfoFromFile(<span class="string">"/proc/"</span>+file+<span class="string">"/status.txt"</span>);</span><br><span class="line">            tree1.add(<span class="keyword">new</span> PcbInfo(info.getPid(),info.getPpid(),info.getName()));</span><br><span class="line">        &#125;</span><br><span class="line">        newTree tree2 = <span class="keyword">new</span> newTree();  <span class="comment">//新建newTree对象</span></span><br><span class="line">        tree2.createTree(tree1);  <span class="comment">//树的构建</span></span><br><span class="line">System.out.println(tree2.toString());  <span class="comment">//打印</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、效果图"><a href="#五、效果图" class="headerlink" title="五、效果图"></a>五、效果图</h3><p><img src="https://i.loli.net/2020/07/07/rm7lFjMT9VKULgX.png" alt="QQ截图20200705151142"></p><h3 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h3><h4 id="File-dir-new-File-dirname-疑惑1"><a href="#File-dir-new-File-dirname-疑惑1" class="headerlink" title="File dir = new File(dirname);  //疑惑1"></a>File dir = new File(dirname);  //疑惑1</h4><p>  可以理解为uri转file.</p><blockquote><p>uri 转 file ：File file = new File(new URI(uri.toString()));</p><p>uri 转 path: Path path = Files.get(uri);</p><p>file 转 uri: URI uri = file.toURI();</p><p>file 转 path: Path path = Paths.get(file.getPath());</p><p>path 转 uri: URI uri = path.toUri()</p><p>path 转 file: File file = new File(path.toUri());</p></blockquote><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>​        正则表达式(Regular Expression)是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为”元字符”）。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。</p><p>相关语法可以参考<a href="https://www.runoob.com/regexp/regexp-tutorial.html" target="_blank" rel="noopener">正则表达式-菜鸟教程</a></p><h4 id="linux下安装eclipse的问题"><a href="#linux下安装eclipse的问题" class="headerlink" title="linux下安装eclipse的问题"></a>linux下安装eclipse的问题</h4><ol><li>首先必须要注意jdk和eclipse的位数，一个是64位，一个是32位，肯定不行。（遇到过报错误码13、1）</li><li>eclipse在linux下默认编码书UTF-8，所以最好在Windows下编程也是utf-8。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统大作业</title>
      <link href="/2020/07/03/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
      <url>/2020/07/03/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%A7%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>在期末做实验时，就想记录一下，怎奈时间太紧，没来得及。考完了顺便整理一下，因为懒惰，我就直接把实验报告放上来了，大家凑活看看吧。完整的代码我会放在github上（前提是等我在github整理好的，可能是好久。。。好久，有空的吧，哈哈哈）</p><h3 id="正文内容："><a href="#正文内容：" class="headerlink" title="正文内容："></a>正文内容：</h3><h3 id="一、-上机内容和要求"><a href="#一、-上机内容和要求" class="headerlink" title="一、  上机内容和要求"></a>一、  上机内容和要求</h3><h4 id="1、-上机实验名称："><a href="#1、-上机实验名称：" class="headerlink" title="1、 上机实验名称："></a><strong>1、</strong> <strong>上机实验名称：</strong></h4><p>页面置换算法的模拟、移动臂调度算法的模拟、一个简单文件管理器的实现</p><h4 id="2内容及要求："><a href="#2内容及要求：" class="headerlink" title="2内容及要求："></a>2<strong>内容及要求：</strong></h4><p><strong>（1）页面置换算法的模拟</strong></p><p>掌握虚拟存储管理中页面置换算法的原理，设计恰当的数据结构和算法，模拟实现页面置换算法。本实验只实现了先进先出置换算法、最近最久未用置换算法。实现了简单的页面模拟。</p><p><strong>（2）移动臂调度算法的模拟</strong></p><p>掌握操作系统的设备管理功能，熟悉移动臂调度算法，设计恰当的数据结构和算法，模拟实现移动臂调度算法。本实验中，只实现了先来先服务、最短寻找时间优先和电梯调度算法。实现界面模拟。</p><p><strong>（3）一个简单文件管理器的实现</strong></p><p>掌握操作系统关于文件管理的各种原理，熟悉常用的文件操作，编写程序实现文件及文件夹的常规操作。本实验实现了对文件的新建（方便演示，默认是TXT文件），保存，打开，删除。</p><h3 id="二、-程序流程及算法描述"><a href="#二、-程序流程及算法描述" class="headerlink" title="二、  程序流程及算法描述"></a>二、  程序流程及算法描述</h3><p>三个实验的设计流程都差不多，分了两个类，一个类用来写界面，继承JFrame,使用一些swing、awt 组件。另一个类，就是用来实现一些算法，一些相应操作。</p><p>具体每个实验的算法：</p><p><strong>（1）</strong>   <strong>页面置换算法的模拟</strong></p><p>FIFO:先进先出，主要使用了队列，出队入队正好实验了页面的移除，调入。主要分三种情况，</p><ol><li><p>页框中包含了此页面，无论页框中是否满，都不用进行任何操作；</p></li><li><p>否则，页框中不包含了此页面，而且页框中未满，直接加在队尾；</p></li><li><p>再否则，页框中不包含了此页面，并且页框中已满，需要第一个元素出队，新的元素入队。</p></li></ol><p>LRU:最久未用置换算法，也是使用了队列，出队入队正好实验了页面的移除，调入。同样分三种情况，</p><ol><li><p>页框中包含了此页面，无论页框中是否满，但都需要进行操作，将出现的元素删去，在重新尾插入，放在最后面，证明是刚刚使用过；</p></li><li><p>否则，页框中不包含了此页面，而且页框中未满，直接加在队尾；</p></li><li><p>再否则，页框中不包含了此页面，并且页框中已满，需要第一个元素出队，新的元素入队。</p></li></ol><p>还有难点在于，在实现模拟我们在写页面置换算法时，将数据填入表中，我实验中是用了好多个文本区，实现了一个个小方格，在里面写入此时页框中的页面。上面实现了算法，我采用了数组的存放了结果，这时候也要注意，一开始，刚刚调入页面，有的页框中是没有值得，但是要把位置空出来，否者后面的数据就无法对应。就在上面算法的三种情况中，每次都想数组中添加此时队列中的元素，不满的统统用 0 代替，之后再页面显示时，可以将0 不显示出来。</p><p><strong>（2）</strong>   <strong>移动臂调度算法的模拟</strong></p><p>FCFS：先来先服务调度算法。这个算法实现起来比较简单，需要记录一下磁头移动的距离，就用了一个list数组记录，磁头移动了，就add一个数据，最后算出平均值。</p><p>SSTF:最短寻找时间优先调度算法。此算法需要对未来即将调入的页面的“预判”。也就是在众多页面中，寻找一个离此时磁头最近的页面，然后进行访问，代码中，利用了一个for循环，当页面访问序列没有结束，就对所有的序列进行遍历，找出最近的一个。然后进行访问，也用了一个list数组记录一下磁头移动的距离。</p><p>Elevator：电梯调度算法。这里用到了三个List结构。一个用来存放比当前柱面大的柱面号，然后利用Collections中sort方法进行排序（升序），另一个用来存放比当前柱面小的柱面号，然后利用Collections中sort方法进行排序（降序）。最后，将两个List合并放在最后一个List链表中。也就相当于向对所有大的柱面进行访问，“电梯上行”。</p><p>然后对所有小的柱面进行访问，“电梯下行”。</p><p>  合并的list列表也就是访问的顺序，直接返回，显示在界面上。</p><p><strong>（3）一个简单文件管理器的实现</strong></p><p>  新建文件：主要是在目录下面建立一个文件，直接 利用File类直接新建一个。</p><p>打开：这里我是利用了一个JFileChooser的文件选择器，JFileChooser 为用户选择文件提供了一种简单的机制。点击打开提交后调用ReadFrom方法，在方法中，新建了一个Reader流，将文件中的内容读到JTextArea中。</p><p>保存：点击打开提交后调用WriteTo方法，在方法中，新建了一个Writer流，将JTextArea中的内容读出来，写入文件保存。</p><p>删除：直接File调用类中delete</p><h3 id="三、-核心代码分析"><a href="#三、-核心代码分析" class="headerlink" title="三、  核心代码分析"></a>三、  核心代码分析</h3><p>1.<strong>移动臂调度算法核心代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiskSchedule</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> start = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//先来先服务算法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">FCFS</span><span class="params">(List&lt;Integer&gt; ar,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">ArrayList&lt;Integer&gt; ar1 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;(ar.size());</span><br><span class="line">ar1.add(abs(start - ar.get(<span class="number">0</span>)));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; ar.size(); i++) &#123;</span><br><span class="line">ar1.add(i, abs(ar.get(i - <span class="number">1</span>) - ar.get(i)));<span class="comment">//算出每个之间的距离</span></span><br><span class="line">&#125;</span><br><span class="line">ar.add( num, avg(ar1));<span class="comment">//将平均距离放在list中，返回</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;<span class="comment">//绝对值</span></span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> -a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">avg</span><span class="params">(List&lt;Integer&gt; ar)</span> </span>&#123;<span class="comment">//传入list算平均值</span></span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ar.size(); i++)</span><br><span class="line">total += ar.get(i);</span><br><span class="line"><span class="keyword">int</span> aver = total / ar.size();</span><br><span class="line"><span class="keyword">return</span> aver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最短寻找时间优先</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SSTF</span><span class="params">(List&lt;Integer&gt; list,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> head = start;  <span class="comment">//当前柱面号</span></span><br><span class="line"> <span class="keyword">int</span> sumtime = <span class="number">0</span>;<span class="comment">// 磁头移动总时间，用距离表示</span></span><br><span class="line"> <span class="keyword">int</span> min = <span class="number">0x7fffffff</span>;  <span class="comment">//最大的整型数 int，相当于INT_MAX </span></span><br><span class="line"> <span class="keyword">int</span> mini = <span class="number">0</span>;<span class="comment">// 记录数组下标</span></span><br><span class="line">ArrayList&lt;Integer&gt; list1 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();<span class="comment">// 存放已经访问过的柱面</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (!list.isEmpty()) &#123;  <span class="comment">//访问队列不为空，持续访问</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; list.size(); j++) &#123;  <span class="comment">//循环找出最小的</span></span><br><span class="line"><span class="keyword">if</span> (Math.abs(head - list.get(j)) &lt; min) &#123;<span class="comment">//与当前柱面相减算出距离</span></span><br><span class="line">min = Math.abs(head - list.get(j)); <span class="comment">//有小的就替换</span></span><br><span class="line">mini = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sumtime = sumtime + min;</span><br><span class="line">list1.add(list.get(mini));<span class="comment">//最小的添加进list1</span></span><br><span class="line">head = list.get(mini);<span class="comment">//</span></span><br><span class="line">list.remove(mini);  <span class="comment">//访问过，就在list中移除</span></span><br><span class="line">min = <span class="number">0x7fffffff</span>;<span class="comment">//最小值重置</span></span><br><span class="line">&#125;</span><br><span class="line">list.removeAll(list);</span><br><span class="line">list.addAll(list1);</span><br><span class="line">list.add(num, sumtime/num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//电梯调度算法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Elevator</span><span class="params">(List&lt;Integer&gt; ar,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">ArrayList&lt;Integer&gt; alsmall = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();<span class="comment">//比当前柱面小的所有元素</span></span><br><span class="line">ArrayList&lt;Integer&gt; albig = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();<span class="comment">//比当前柱面大的所有元素</span></span><br><span class="line">ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;Integer&gt;(); <span class="comment">//最后访问结果</span></span><br><span class="line"><span class="keyword">int</span> sumtime;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ar.size(); i++) &#123;  <span class="comment">//按大小分类</span></span><br><span class="line"><span class="keyword">if</span> (ar.get(i) &gt; start) &#123;</span><br><span class="line">arr.add(ar.get(i));</span><br><span class="line">albig.add(ar.get(i));</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">alsmall.add(ar.get(i));</span><br><span class="line">&#125;</span><br><span class="line">Collections.sort(arr);  <span class="comment">//排序</span></span><br><span class="line">Collections.sort(albig);</span><br><span class="line">Collections.sort(alsmall);</span><br><span class="line">Collections.reverse(alsmall);</span><br><span class="line">arr.addAll(alsmall);</span><br><span class="line"></span><br><span class="line"><span class="comment">//算出平均移动</span></span><br><span class="line"><span class="keyword">if</span>(albig.size()&gt;<span class="number">0</span>&amp;&amp;alsmall.size()&gt;<span class="number">0</span>)  </span><br><span class="line"><span class="comment">//当前柱面在中间 先访问大的序列  再访问小的序列</span></span><br><span class="line"><span class="comment">//最后结果就是2*最大值-较大序列中的最小-较小序列中的最小</span></span><br><span class="line">sumtime= <span class="number">2</span>*arr.get(albig.size()-<span class="number">1</span>)-arr.get(<span class="number">0</span>)-arr.get(arr.size()-<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(albig.size()&gt;<span class="number">0</span>&amp;&amp;alsmall.size()==<span class="number">0</span>)</span><br><span class="line">sumtime=arr.get(albig.size()-<span class="number">1</span>)-arr.get(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">sumtime = arr.get(<span class="number">0</span>)-arr.get(alsmall.size()-<span class="number">1</span>);</span><br><span class="line">arr.add(num, sumtime/num);<span class="comment">//添加平均值</span></span><br><span class="line">ar.removeAll(ar);<span class="comment">//移除所有元素</span></span><br><span class="line">ar.addAll(arr);<span class="comment">//将要返回的元素添加进来</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.<strong>页面置换算法核心代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先进先出</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">int</span>[] FIFO(List&lt;Integer&gt; ar,<span class="keyword">int</span> page_size) &#123;</span><br><span class="line">    Queue&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;(); <span class="comment">//页框用队列结构</span></span><br><span class="line">    <span class="keyword">int</span> [] re = <span class="keyword">new</span> <span class="keyword">int</span> [ar.size()*page_size+<span class="number">1</span>]; <span class="comment">//返回数组</span></span><br><span class="line">    <span class="keyword">int</span> re_i;    <span class="comment">//指向写入返回值的位置</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//记录缺页中断次数</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ar.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">        re_i = i*page_size;</span><br><span class="line">        <span class="keyword">int</span> element = ar.get(i);</span><br><span class="line">            <span class="comment">//页面中已经包含此元素</span></span><br><span class="line">            <span class="keyword">if</span> (queue.contains(element)) &#123;</span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//页面大小未达到页框数目，直接放入元素</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (queue.size() &lt; page_size) &#123;</span><br><span class="line">                queue.offer(element);</span><br><span class="line">                count++;  <span class="comment">//中断+1</span></span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//移出最早的元素,并加入新元素</span></span><br><span class="line">                queue.poll();</span><br><span class="line">                queue.offer(element);</span><br><span class="line">                count++;<span class="comment">//中断+1</span></span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        re[ar.size()*page_size] = count;<span class="comment">//最后的结果 缺页中断率也传过去</span></span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最久未用置换算法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">int</span>[] LRU(List&lt;Integer&gt; ar,<span class="keyword">int</span> page_size) &#123;</span><br><span class="line">    Queue&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;(); </span><br><span class="line">    <span class="keyword">int</span> [] re = <span class="keyword">new</span> <span class="keyword">int</span> [ar.size()*page_size+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> re_i;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//记录缺页中断次数</span></span><br><span class="line">        <span class="keyword">int</span> th=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ar.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">        re_i = i*page_size;</span><br><span class="line">        <span class="keyword">int</span> element = ar.get(i);</span><br><span class="line">            <span class="comment">//页面中已经包含此元素</span></span><br><span class="line">            <span class="keyword">if</span> (queue.contains(element)) &#123;</span><br><span class="line">                queue.remove(element);</span><br><span class="line">                queue.add(element);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//页面大小未达到页框数目，直接放入元素</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (queue.size() &lt; page_size) &#123;</span><br><span class="line">                queue.offer(element);</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//移出最早的元素,并加入新元素</span></span><br><span class="line">                queue.poll();</span><br><span class="line">                queue.offer(element);</span><br><span class="line">                count++;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span>(Object a:queue.toArray())</span><br><span class="line">                &#123;</span><br><span class="line">                re[re_i]=(<span class="keyword">int</span>) a;re_i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        re[ar.size()*page_size] = count;</span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.<strong>文件管理器核心代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将文本区内容写入文件中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeTo</span><span class="params">(File file, JTextArea textArea)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Writer wr = <span class="keyword">new</span> FileWriter(file);<span class="comment">//新建Writer流</span></span><br><span class="line">wr.write(textArea.getText());</span><br><span class="line">wr.close();</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"\""</span>+file.getName()+<span class="string">"\"文件保存成功。"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"\""</span>+file.getName()+<span class="string">"\"文件不存在。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(IOException ex)</span><br><span class="line">        &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"写入文件时数据错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将文件中数据读出来并显示在文本区中</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ReadFrom</span><span class="params">(File file, JTextArea text)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Reader reader = <span class="keyword">new</span> FileReader(file);          <span class="comment">//文件字符输入流</span></span><br><span class="line">            BufferedReader bufrd = <span class="keyword">new</span> BufferedReader(reader);<span class="comment">//缓冲字符输入流</span></span><br><span class="line">            text.setText(<span class="string">""</span>);                              <span class="comment">//清空文本区</span></span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">if</span>(!(line=bufrd.readLine()).equals(<span class="string">""</span>)); <span class="comment">//读取一行字符串</span></span><br><span class="line">            text.append(line);        <span class="comment">//text文本区添加line字符串</span></span><br><span class="line">            bufrd.close();</span><br><span class="line">            reader.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(FileNotFoundException ex)                    <span class="comment">//若文件不存在，则忽略文件</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!file.getName().equals(<span class="string">""</span>))</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"\""</span>+file.getName()+<span class="string">"\"文件不存在。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(IOException ex)</span><br><span class="line">        &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"读取文件时数据错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="四、-运行效果"><a href="#四、-运行效果" class="headerlink" title="四、  运行效果"></a>四、  运行效果</h3><h4 id="主函数界面"><a href="#主函数界面" class="headerlink" title="主函数界面"></a>主函数界面</h4><p><img src="https://i.loli.net/2020/07/03/3yJaevjunOIHhE8.png" alt></p><h4 id="磁盘移臂调度算法界面"><a href="#磁盘移臂调度算法界面" class="headerlink" title="磁盘移臂调度算法界面"></a>磁盘移臂调度算法界面</h4><p><img src="https://i.loli.net/2020/07/04/eLCZ48sYInbXt19.png" alt="21"></p><p><img src="https://i.loli.net/2020/07/04/vUyKOStnM2qagEf.png" alt="31"></p><h4 id="文件管理系统界面"><a href="#文件管理系统界面" class="headerlink" title="文件管理系统界面"></a>文件管理系统界面</h4><p><img src="https://i.loli.net/2020/07/04/qf3eIXCMidA7jSo.png" alt></p><p><img src="https://i.loli.net/2020/07/04/17DvJKx6FyjcOgk.png" alt></p><h4 id="页面置换算法界面"><a href="#页面置换算法界面" class="headerlink" title="页面置换算法界面"></a>页面置换算法界面</h4><p><img src="https://i.loli.net/2020/07/04/CxlDjzosXrdHT1m.png" alt></p><p><img src="https://i.loli.net/2020/07/04/WwIArtSM4By1si8.png" alt></p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>这次写界面写吐了，这辈子都不想用AWT/Swing组件了。况且这东西现在没什么人用了。就这样吧，本片blog结束了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> AWT/Swing  操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生产者消费者问题</title>
      <link href="/2020/06/17/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/"/>
      <url>/2020/06/17/%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="生产者消费者问题描述"><a href="#生产者消费者问题描述" class="headerlink" title="生产者消费者问题描述"></a>生产者消费者问题描述</h3><ol><li><p>假设系统中有一个比较大的缓冲池，生产者的任务是只要缓冲池未满就可以将生产出的产品放入其中，而消费者的任务是只要缓冲池未空就可以从缓冲池中拿走产品。缓冲池被占用时，任何进程都不能访问。</p></li><li><p>每一个生产者都要把自己生产的产品放入缓冲池，每个消费者从缓冲池中取走产品消费。在这种情况下，生产者消费者进程同步，因为只有通过互通消息才知道是否能存入产品或者取走产品。他们之间也存在互斥，即生产者消费者必须互斥访问缓冲池，即不能有两个以上的进程同时进行。</p></li></ol><h3 id="伪代码（学操作系统PV操作时）"><a href="#伪代码（学操作系统PV操作时）" class="headerlink" title="伪代码（学操作系统PV操作时）"></a>伪代码（学操作系统PV操作时）</h3><ol><li><h4 id="缓冲区只有一个"><a href="#缓冲区只有一个" class="headerlink" title="缓冲区只有一个"></a>缓冲区只有一个</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> buffer</span><br><span class="line">Semaphoroe sp=<span class="number">1</span>,sc=<span class="number">0</span>; <span class="comment">//sp:空缓冲区 sc:产品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">processs <span class="title">producer</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        生产一个product;</span><br><span class="line">        P(sp); <span class="comment">//空缓冲区有一个，-1</span></span><br><span class="line">        buffer = product</span><br><span class="line">        V(sc); <span class="comment">//产品+1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">process <span class="title">consumer</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(sc);</span><br><span class="line">        取走产品；</span><br><span class="line">        V(sp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="缓冲区有多个"><a href="#缓冲区有多个" class="headerlink" title="缓冲区有多个"></a>缓冲区有多个</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> buffer[n],k=<span class="number">0</span>,t=<span class="number">0</span>;  <span class="comment">//k:当前可用来放产品的空缓冲区下标</span></span><br><span class="line"><span class="comment">//t:消费者可以用来取产品的小标</span></span><br><span class="line">Semaphoroe sp=n,sc=<span class="number">0</span>; <span class="comment">//sp:空缓冲区 sc:产品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">processs <span class="title">producer</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        生产一个product;</span><br><span class="line">        P(sp); <span class="comment">//空缓冲区有一个，-1</span></span><br><span class="line">        buffer[k] = product;</span><br><span class="line">        k=(++k)%n;</span><br><span class="line">        V(sc); <span class="comment">//产品+1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">process <span class="title">consumer</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(sc);</span><br><span class="line">        取走产品;</span><br><span class="line">        t=(++t)%n;</span><br><span class="line">        V(sp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java代码实现："><a href="#java代码实现：" class="headerlink" title="java代码实现："></a>java代码实现：</h3><h4 id="方法一：synchronized-wait-notify"><a href="#方法一：synchronized-wait-notify" class="headerlink" title="方法一：synchronized, wait, notify"></a>方法一：synchronized, wait, notify</h4><p>​                    <code>[ˈsɪŋkrənaɪzd]</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Resource</span> </span>&#123;</span><br><span class="line">    <span class="comment">//当前资源的数量</span></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//当前资源的上限</span></span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//消费资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果num为0，没有资源了，需要等待</span></span><br><span class="line">        <span class="keyword">while</span> (num == <span class="number">0</span>) &#123;<span class="comment">//这里jdk源码里推荐用while，因为有可能出现虚假唤醒，所以要再次确认</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者进入等待"</span>);</span><br><span class="line">                <span class="keyword">this</span>.wait();<span class="comment">//线程等待，并释放锁</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果线程可以执行到这里，说明资源里有资源可以消费</span></span><br><span class="line">        num--;</span><br><span class="line">        System.out.println(<span class="string">"消费者线程为:"</span> + Thread.currentThread().getName() + <span class="string">"--资源数量:"</span> + num);</span><br><span class="line">        <span class="keyword">this</span>.notify();<span class="comment">//唤醒其他正在等待的线程</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//生产资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果资源满了，就进入阻塞状态</span></span><br><span class="line">        <span class="keyword">while</span> (num == size) &#123;<span class="comment">//这里jdk源码里推荐用while，因为有可能出现虚假唤醒，所以要再次确认</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"生产者进入等待"</span>);</span><br><span class="line">                <span class="keyword">this</span>.wait();<span class="comment">//线程进入阻塞状态，并释放锁</span></span><br><span class="line"> </span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        num++;</span><br><span class="line">        System.out.println(<span class="string">"生产者线程为:"</span> + Thread.currentThread().getName() + <span class="string">"--资源数量:"</span> + num);</span><br><span class="line">        <span class="keyword">this</span>.notify();<span class="comment">//唤醒其他正在等待的线程</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二：lock-condition-await-signal"><a href="#方法二：lock-condition-await-signal" class="headerlink" title="方法二：lock, condition, await, signal"></a>方法二：lock, condition, await, signal</h4><ul><li><strong>Resourse:负责缓冲区的定义，以及消化资源生产资源的过程。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> os;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Resoures</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> num = <span class="number">0</span>; <span class="comment">//当前可用资源的数量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">10</span>;<span class="comment">//缓冲区的大小</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Lock lock = <span class="keyword">new</span> ReentrantLock();<span class="comment">//创建一个锁对象</span></span><br><span class="line"><span class="keyword">private</span> Condition condition = lock.newCondition();<span class="comment">//创建锁的条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//消费资源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">lock.lock(); <span class="comment">//开启锁</span></span><br><span class="line"><span class="keyword">while</span>(num==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"暂无资源，消费者进入等待态，等待生产..."</span>);</span><br><span class="line">condition.await();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"消费者开始消费..."</span>);</span><br><span class="line">num--;</span><br><span class="line">System.out.println(<span class="string">"当前线程是"</span>+Thread.currentThread().getName()+<span class="string">"--当前可用资源是"</span>+num);</span><br><span class="line">condition.signal(); <span class="comment">//唤醒另一个进程</span></span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">lock.unlock(); <span class="comment">//释放锁</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生产资源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">lock.lock();</span><br><span class="line"><span class="keyword">while</span>(num==size)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"当前缓冲区已满，等待消费..."</span>);</span><br><span class="line">condition.await();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"生产者开始生产..."</span>);</span><br><span class="line">num++;</span><br><span class="line">System.out.println(<span class="string">"当前线程是"</span>+Thread.currentThread().getName()+<span class="string">"--当前可用资源是"</span>+num);</span><br><span class="line">condition.signal();  <span class="comment">//唤醒一个等待线程</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">lock.unlock();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Consumer:消费者，实现Runnable接口。有一个Resourse的成员变量，主要是在run方法中调用remove方法。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> os;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Time;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Resoures resoures;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(Resoures resoures)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line"><span class="keyword">this</span>.resoures = resoures;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">resoures.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Productor:消费者，实现Runnable接口。有一个Resourse的成员变量，主要是在run方法中调用put方法。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> os;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Productor</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Resoures resourse;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Productor</span><span class="params">(Resoures resoures)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line"><span class="keyword">this</span>.resourse = resoures;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">resourse.put();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Main:主函数,主要是创建以及启动线程。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> os;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Resoures resoures  = <span class="keyword">new</span> Resoures();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建生产者进程</span></span><br><span class="line">Consumer consumer1 = <span class="keyword">new</span> Consumer(resoures);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建消费者进程</span></span><br><span class="line">Productor productor1 = <span class="keyword">new</span> Productor(resoures);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(productor1).start();</span><br><span class="line"><span class="keyword">new</span> Thread(consumer1).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="补上面的知识点："><a href="#补上面的知识点：" class="headerlink" title="补上面的知识点："></a>补上面的知识点：</h3><h4 id="1-方法一中的synchronized。"><a href="#1-方法一中的synchronized。" class="headerlink" title="1.方法一中的synchronized。"></a>1.方法一中的synchronized。</h4><p>synchronized关键字最主要有以下3种应用方式，下面分别介绍</p><ul><li>修饰实例方法，作用于当前实例加锁，进入同步代码前要获得<strong>当前实例的锁</strong></li><li>修饰静态方法，作用于当前类对象加锁，进入同步代码前要获得<strong>当前类对象的锁</strong></li><li>修饰代码块，指定加锁对象，对给定对象加锁，进入同步代码库前要获得<strong>给定对象的锁</strong></li></ul><p>==其他内容有空再补==</p><blockquote><p>参考文章：</p><p><a href="https://blog.csdn.net/qq_40638598/article/details/100119923?ops_request_misc=&request_id=&biz_id=102&utm_term=synchronized&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-100119923" target="_blank" rel="noopener">文章1</a>        </p><p><a href="https://blog.csdn.net/topdeveloperr/article/details/80485900?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159246709219725219914797%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=159246709219725219914797&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-80485900.first_rank_ecpm_v3_pc_rank_v2&utm_term=synchronized#4.%E9%9D%99%E6%80%81synchronized%E6%96%B9%E6%B3%95%E4%B8%8Esynchronized(class)%E4%BB%A3%E7%A0%81%E5%9D%97" target="_blank" rel="noopener">文章2</a>        </p><p><a href="https://blog.csdn.net/qq_40949465/article/details/88734834?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159246709219725219914797%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=159246709219725219914797&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-88734834.first_rank_ecpm_v3_pc_rank_v2&utm_term=synchronized#google_vignette" target="_blank" rel="noopener">文章3</a></p></blockquote><h4 id="2-方法二中的lock-condition-await-signal。"><a href="#2-方法二中的lock-condition-await-signal。" class="headerlink" title="2.方法二中的lock, condition, await, signal。"></a>2.方法二中的lock, condition, await, signal。</h4><p><img src="https://i.loli.net/2020/06/18/Uy6GLA3aPX1NYhW.png" alt="QQ截图20200618153230"></p><table><thead><tr><th><strong>方法摘要</strong></th><th></th></tr></thead><tbody><tr><td><code>void</code></td><td><code>lock</code>       获取锁。</td></tr><tr><td><code>void</code></td><td><code>lockInterruptibly()</code>       如果当前线程未被中断，则获取锁。</td></tr><tr><td><code>Condition</code></td><td><code>newCondition()</code>       返回绑定到此 Lock实例的新 Condition  实例。</td></tr><tr><td><code>boolean</code></td><td><code>tryLock</code>      仅在调用时锁为空闲状态才获取该锁。</td></tr><tr><td><code>boolean</code></td><td><code>tryLock(long time,  TimeUnit unit)</code>       如果锁在给定的等待时间内空闲，并且当前线程未被中断，则获取锁。</td></tr><tr><td><code>void</code></td><td><code>unlock()</code> 释放锁</td></tr></tbody></table><p>Condition接口：</p><blockquote><ul><li><code>public interface Condition</code></li></ul><p><code>Condition</code> 将 <code>Object</code> 监视器方法（<code>wait</code>、<code>notify 和 notifyAll</code>）分解成截然不同的对象，以便通过将这些对象与任意  Lock 实现组合使用，为每个对象提供多个等待 set（wait-set）。其中，Lock 替代了  synchronized 方法和语句的使用，Condition 替代了 Object 监视器方法的使用。 </p><p>条件（也称为<em>条件队列</em> 或<em>条件变量<em>）为线程提供了一个含义，以便在某个状态条件现在可能为 true  的另一个线程通知它之前，一直挂起该线程（即让其“等待”）。因为访问此共享状态信息发生在不同的线程中，所以它必须受保护，因此要将某种形式的锁与该条件相关联。等待提供一个条件的主要属性是：</em>以原子方式</em>  释放相关的锁，并挂起当前线程，就像 <code>Object.wait</code> 做的那样。 </p><p><code>Condition</code> 实例实质上被绑定到一个锁上。要为特定 <a href="../../../../java/util/concurrent/locks/Lock.html"><code>Lock</code></a>  实例获得 <code>Condition</code> 实例，请使用其 <a href="../../../../java/util/concurrent/locks/Lock.html#newCondition()"><code>newCondition()</code></a>  方法。 </p></blockquote><table><thead><tr><th><strong>方法摘要</strong></th><th></th></tr></thead><tbody><tr><td><code>void</code></td><td><code>await()</code>    造成当前线程在接到信号或被中断之前一直处于等待状态。</td></tr><tr><td><code>boolean</code></td><td><code>await(long time,TimeUnit unit)</code>      造成当前线程在接到信号、被中断或到达指定等待时间之前一直处于等待状态。</td></tr><tr><td><code>long</code></td><td><code>awaitNanos(long nanosTimeout)</code>       造成当前线程在接到信号、被中断或到达指定等待时间之前一直处于等待状态。</td></tr><tr><td><code>void</code></td><td><code>awaitUninterruptitbly()</code>   造成当前线程在接到信号之前一直处于等待状态。</td></tr><tr><td><code>boolean</code></td><td><code>awaitUntil(Date deadline)</code>  造成当前线程在接到信号、被中断或到达指定最后期限之前一直处于等待状态。</td></tr><tr><td><code>void</code></td><td><code>signal()</code>       唤醒一个等待线程。</td></tr><tr><td><code>void</code></td><td><code>signalAll()</code>      唤醒所有等待线程。</td></tr></tbody></table><hr><h3 id="挖坑："><a href="#挖坑：" class="headerlink" title="挖坑："></a>挖坑：</h3><p>1.关于i++与++i之间的区别。</p><p>2.例如本例中，Resourse做为Productor和Consumer的成员变量。或许应该看看java的设计之类的书。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java基础复习  线程与进程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thymeleaf</title>
      <link href="/2020/05/10/thymeleaf/"/>
      <url>/2020/05/10/thymeleaf/</url>
      
        <content type="html"><![CDATA[<h2 id="Thymeleaf模板引擎"><a href="#Thymeleaf模板引擎" class="headerlink" title="Thymeleaf模板引擎"></a>Thymeleaf模板引擎</h2><a id="more"></a><h4 id="1、简单表达式"><a href="#1、简单表达式" class="headerlink" title="1、简单表达式"></a>1、简单表达式</h4><p>变量表达式：${…}</p><p>选择变量表达式：*{…}</p><p>消息表达式：#{…}</p><p>链接URL表达式：@{…}</p><p>片段表达式：~{。。。}</p><h4 id="2-文字"><a href="#2-文字" class="headerlink" title="2.文字"></a>2.文字</h4><p>文本文字：’one text’,’Another one’</p><p>号码文字：0 , 34 , 3.0 , 12.3</p><p>布尔文字：true,false</p><p>空文字：null</p><p>文字标记：one, sometext , main …</p><h4 id="3-文字操作"><a href="#3-文字操作" class="headerlink" title="3.文字操作"></a>3.文字操作</h4><p>字符串连接：+</p><p>文字替换：|The name is ${name}|</p><h4 id="4-算术运算"><a href="#4-算术运算" class="headerlink" title="4.算术运算"></a>4.算术运算</h4><p>二元运算符：+， ，-， *， /，%</p><p>减号（一元运算符）：-</p><h4 id="5-布尔运算："><a href="#5-布尔运算：" class="headerlink" title="5.布尔运算："></a>5.布尔运算：</h4><p>二元运算：and，or</p><p>布尔否定（一元运算符）：！，not</p><h4 id="6-比较和相等"><a href="#6-比较和相等" class="headerlink" title="6.比较和相等"></a>6.比较和相等</h4><p>比较符：&gt;，&lt;，&gt;=，&lt;=(gt，lt，ge，le)</p><p>等号运算符：==，!=（eq,ne）</p><h4 id="7-条件运算符"><a href="#7-条件运算符" class="headerlink" title="7.条件运算符"></a>7.条件运算符</h4><p>如果-则: (if)?(then)</p><p>如果-则-否则:  (if)?(then):(else)</p><p>默认:  (value)？：(defaultvalue)</p><h4 id="8-特别符号"><a href="#8-特别符号" class="headerlink" title="8.特别符号:"></a>8.特别符号:</h4><p>无操作符：_</p><h3 id="所有这些功能都可以组合和嵌套："><a href="#所有这些功能都可以组合和嵌套：" class="headerlink" title="所有这些功能都可以组合和嵌套："></a>所有这些功能都可以组合和嵌套：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'User is of type '+($&#123;user.isAdmin()&#125; ?'Administrator':($&#123;user.type&#125;?:'Unknown'))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring MVC</title>
      <link href="/2020/05/10/springboot%E5%88%9D%E6%8E%A2/"/>
      <url>/2020/05/10/springboot%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="初探Spring-MVC参考指南（持续更新）"><a href="#初探Spring-MVC参考指南（持续更新）" class="headerlink" title="初探Spring MVC参考指南（持续更新）"></a>初探Spring MVC参考指南（持续更新）</h1><a id="more"></a><blockquote><p><a href="https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications" target="_blank" rel="noopener">官方文档</a></p></blockquote><h2 id="1-Spring-MVC"><a href="#1-Spring-MVC" class="headerlink" title="1.Spring  MVC"></a>1.Spring  MVC</h2><p>Spring MVC lets you create special <code>@Controller</code> or <code>@RestController</code> beans to handle incoming HTTP requests. Methods in your controller are mapped to HTTP using <code>@RequestMapping</code> annotations.</p><ul><li>通过使用@Controller 或者 @RestController 容器注解来处理HTTP请求。</li></ul><p>Here is a typical example <code>@RestController</code> to serve JSON data:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/users"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRestController</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/&#123;user&#125;"</span>, method=RequestMethod.GET)</span><br><span class="line"> <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">(@PathVariable Long user)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解读：</p><ol><li><p>@RestController等同于@Controller+@ResponseBody</p><p>在一个类上添加@Controller，标明这个类似控制类。</p><blockquote><p>@ResponseBody表示方法的返回值直接以指定的格式写入Http response body中，而不是解析为跳转路径。</p><p>　　格式的转换是通过HttpMessageConverter中的方法实现的，因为它是一个接口，因此由其实现类完成转换。</p><p>如果要求方法返回的是json格式数据，而不是跳转页面，可以直接在类上标注@RestController，而不用在每个方法中标注@ResponseBody，简化了开发过程。</p></blockquote></li><li><p>@RestMapping是用来映射请求的，即标明用来处理哪些URL请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span>  <span class="comment">//控制类</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)  <span class="comment">//标明用来处理/user请求</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span></span></span><br><span class="line"><span class="class"></span>&#123;         </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/users"</span>) <span class="comment">//标明用来处理/users请求</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">users</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"users"</span>;  <span class="comment">//返回users字符串，如果静态文件夹下有user.html文件，springboot会自动渲染</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        　此时请求users方法的url路径就是：…/user/users。</p></li><li><p>@Request与@PathVariable注解的作用都是从前端获取传递到后台的参数值</p><ul><li>@PathVariable：从URI中获取参数值</li><li>@Request：从request中获取参数值</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost:8060/studySSM/admin/admin/reset/4?userType=1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/reset/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">resetPwd</span><span class="params">(...,</span></span></span><br><span class="line"><span class="function"><span class="params">@PathVariable(value=<span class="string">"id"</span>)</span> <span class="keyword">int</span> uid,</span></span><br><span class="line"><span class="function">        @<span class="title">RequestParam</span><span class="params">(value=<span class="string">"userType"</span>, required=<span class="keyword">false</span>)</span> <span class="keyword">int</span> type,</span></span><br><span class="line"><span class="function">         ...) </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"uid:"</span>+ uid + <span class="string">" userType:"</span> + type);</span><br><span class="line">    <span class="comment">//打印输出 uid:4 userType:1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-SpringMvc自动配置"><a href="#1-1-SpringMvc自动配置" class="headerlink" title="1.1  SpringMvc自动配置"></a>1.1  SpringMvc自动配置</h3><ul><li><p>Inclusion of <code>ContentNegotiatingViewResolver</code> and <code>BeanNameViewResolver</code> beans.</p><ul><li>自动配置了ViewResolver（视图解析器：根据方法的返回值得到视图对象（View），视图对象决定如何渲染（转发？重定向？））</li><li>ContentNegotiatingViewResolver：组合所有的视图解析器的；</li><li>==如何定制：我们可以自己给容器中添加一个视图解析器；自动的将其组合进来；==</li></ul></li><li><p>Support for serving static resources, including support for WebJars (see below).</p><ul><li>静态文件夹路径，webjars</li></ul></li><li><p>Automatic registration of <code>Converter</code>, <code>GenericConverter</code>, <code>Formatter</code> beans.</p><ul><li><p>自动注册了<code>Converter</code>, <code>GenericConverter</code>, <code>Formatter</code> beans.</p></li><li><p>Converter：转换器；  public String hello(User user)：类型转换使用Converter</p></li><li><p><code>Formatter</code>  格式化器；  2017.12.17===Date；</p></li></ul></li><li><p>Support for <code>HttpMessageConverters</code> (see below).</p><ul><li><p>HttpMessageConverter：SpringMVC用来转换Http请求和响应的；User—Json；</p></li><li><p><code>HttpMessageConverters</code> 是从容器中确定；获取所有的HttpMessageConverter；</p><p>==自己给容器中添加HttpMessageConverter，只需要将自己的组件注册容器中（@Bean,@Component）==</p></li></ul></li><li><p>Automatic registration of <code>MessageCodesResolver</code> (see below).</p><ul><li>定义错误代码生成规则</li></ul></li><li><p>Static <code>index.html</code> support.</p></li><li><p>Custom <code>Favicon</code> support (see below).</p></li><li><p>Automatic use of a <code>ConfigurableWebBindingInitializer</code> bean (see below).</p><ul><li>我们可以配置一个ConfigurableWebBindingInitializer来替换默认的；（添加到容器）</li></ul></li></ul><hr><p><strong>org.springframework.boot.autoconfigure.web：web的所有自动场景；</strong></p><p>If you want to keep Spring Boot MVC features, and you just want to add additional <a href="https://docs.spring.io/spring/docs/4.3.14.RELEASE/spring-framework-reference/htmlsingle#mvc" target="_blank" rel="noopener">MVC configuration</a> (interceptors, formatters, view controllers etc.) you can add your own <code>@Configuration</code> class of type <code>WebMvcConfigurerAdapter</code>, but <strong>without</strong> <code>@EnableWebMvc</code>. If you wish to provide custom instances of <code>RequestMappingHandlerMapping</code>, <code>RequestMappingHandlerAdapter</code> or <code>ExceptionHandlerExceptionResolver</code> you can declare a <code>WebMvcRegistrationsAdapter</code> instance providing such components.</p><p>If you want to take complete control of Spring MVC, you can add your own <code>@Configuration</code> annotated with <code>@EnableWebMvc</code>.</p><p>如果你想要保持springboot MVC的特性，你只需要额外添加 MVC configuration(例如：interceptors拦截器, formatters格式化器, view controllers视图控制器)。你可以有一个<code>WebMvcConfigurerAdapter</code>类型的类，并加上@Configuration配置，但不要加上@EnableWebMvc。</p><p>如果希望提供“RequestMappingHandlerMapping”、“RequestMappingHandlerAdapter”或“ExceptionHandlerExceptionResolver”的自定义实例，则可以声明提供此类组件的“WebMVCregistrationAdapter”实例。</p><hr><h3 id="1-2扩展SpringMvc"><a href="#1-2扩展SpringMvc" class="headerlink" title="1.2扩展SpringMvc"></a>1.2扩展SpringMvc</h3><p><strong>==编写一个配置类（@Configuration），是WebMvcConfigurerAdapter类型；不能标注@EnableWebMvc==</strong>;</p><p>既保留了所有的自动配置，也能用我们扩展的配置；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// super.addViewControllers(registry);</span></span><br><span class="line">        <span class="comment">//浏览器发送 /xxx 请求来到 xxxx</span></span><br><span class="line">        registry.addViewController(<span class="string">"/xxx"</span>).setViewName(<span class="string">"xxxx"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-EnableWebMvc全面接管Springmvc"><a href="#1-2-EnableWebMvc全面接管Springmvc" class="headerlink" title="1.2@EnableWebMvc全面接管Springmvc"></a>1.2@EnableWebMvc全面接管Springmvc</h3><p>尚是小白，不建议全面接管。（以后在补上吧）</p>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇blog</title>
      <link href="/2020/05/06/blog01/"/>
      <url>/2020/05/06/blog01/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基于hexo框架的个人博客（静态）"><a href="#一、基于hexo框架的个人博客（静态）" class="headerlink" title="一、基于hexo框架的个人博客（静态）"></a>一、基于hexo框架的个人博客（静态）</h1><a id="more"></a><h2 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h2><h4 id="1-下载并安装node-js"><a href="#1-下载并安装node-js" class="headerlink" title="1.下载并安装node.js"></a>1.下载并安装node.js</h4><blockquote><p><a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a></p></blockquote><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506175849.png" alt></p><p>命令行输入node -v，出现版本号即安装成功。</p><h4 id="2-通过node-js默认的包管理工具npm下载hexo框架，由于npm下载慢，所以先通过npm下载cnpm。"><a href="#2-通过node-js默认的包管理工具npm下载hexo框架，由于npm下载慢，所以先通过npm下载cnpm。" class="headerlink" title="2.通过node.js默认的包管理工具npm下载hexo框架，由于npm下载慢，所以先通过npm下载cnpm。"></a>2.通过node.js默认的包管理工具npm下载hexo框架，由于npm下载慢，所以先通过npm下载cnpm。</h4><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506180903.png" alt></p><h4 id="3-选择一个路径建立一个空的文件夹，存放blog"><a href="#3-选择一个路径建立一个空的文件夹，存放blog" class="headerlink" title="3.选择一个路径建立一个空的文件夹，存放blog"></a>3.选择一个路径建立一个空的文件夹，存放blog</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure><h4 id="4-使用hexo生成博客"><a href="#4-使用hexo生成博客" class="headerlink" title="4.使用hexo生成博客"></a>4.使用hexo生成博客</h4><p>hexo init 初始化一个博客</p><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506181750.png" alt></p><h4 id="5-启动hexo"><a href="#5-启动hexo" class="headerlink" title="5.启动hexo"></a>5.启动hexo</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>默认在4000端口启动</p><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506182102.png" alt></p><h4 id="6-通过浏览器访问"><a href="#6-通过浏览器访问" class="headerlink" title="6.通过浏览器访问"></a>6.通过浏览器访问</h4><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506182326.png" alt></p><h4 id="7-新建博客"><a href="#7-新建博客" class="headerlink" title="7.新建博客"></a>7.新建博客</h4><p>默认使用markdown格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"我的第一篇博客"</span></span><br></pre></td></tr></table></figure><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506182849.png" alt></p><h4 id="8-退回到blog目录，清理、生成hexo-再次启动，博客就更新完成"><a href="#8-退回到blog目录，清理、生成hexo-再次启动，博客就更新完成" class="headerlink" title="8.退回到blog目录，清理、生成hexo,再次启动，博客就更新完成"></a>8.退回到blog目录，清理、生成hexo,再次启动，博客就更新完成</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ../..    <span class="comment">//退两级目录</span></span><br><span class="line">hexo clean  <span class="comment">//清理</span></span><br><span class="line">hexo g      <span class="comment">//生成    </span></span><br><span class="line">hexo s      <span class="comment">//hexo启动</span></span><br></pre></td></tr></table></figure><h4 id="9-部署远端（免费github）"><a href="#9-部署远端（免费github）" class="headerlink" title="9.部署远端（免费github）"></a>9.部署远端（免费github）</h4><p>先登陆github，创建一个空仓库</p><p>然后在linux中修改 -config.yml文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _configyml</span><br></pre></td></tr></table></figure><p>修改内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:<span class="comment">//github.com/Fqikang/Fqikang1.github.io.git</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506184051.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d  <span class="comment">//部署到远端</span></span><br></pre></td></tr></table></figure><p>==注意：win10要先安装一个git，并先配置git bash。==</p><hr><h1 id="二、在linux（虚拟机）下命令行安装软件"><a href="#二、在linux（虚拟机）下命令行安装软件" class="headerlink" title="二、在linux（虚拟机）下命令行安装软件"></a>二、在linux（虚拟机）下命令行安装软件</h1><h3 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h3><ol><li><p>在Windows本机上下载安装文件 node-v14.1.0-linux-x64.tar.xz</p><p><img src="http://qa42m8lkx.bkt.clouddn.com/1.png" alt></p><p>2.用Xftp将源码包上传到linux的/opt/soft，在命令行输入：tar -xvf  node-v14.1.0-linux-x64.tar.xz进行解压。</p></li></ol><p>​        3.编辑文件  vi /etc/profile文件末添加如下,(配置node的环境变量)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/opt/soft/node-v0.10.32-linux-x64</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin</span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure><p>​        4.在命令行输入：source /etc/profile，让配置文件生效。</p><p>5.在命令行输入：node -v，查看node.js的版本。如果出现版本号则证明安装成功。如下图所示。</p><p><img src="http://qa42m8lkx.bkt.clouddn.com/20200506174433.png" alt></p><h3 id="2-npm与cnpm的区别"><a href="#2-npm与cnpm的区别" class="headerlink" title="2.npm与cnpm的区别"></a>2.npm与cnpm的区别</h3><p>npm:是 JavaScript 世界的包管理工具，并且是 Node.js 平台的默认包管理工具。通过 npm 可以安装、共享、分发代码，管理项目依赖关系。</p><p>cnpm:</p><blockquote><p>淘宝团队做的国内镜像，因为npm的服务器位于国外可能会影响安装。淘宝镜像与官方同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</p><p>安装：命令提示符执行<br><code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code></p><p><code>cnpm -v</code> 来测试是否成功安装</p><p><code>-g</code>：全局安装。 将会安装在C：\ Users \ Administrator \ AppData \ Roaming \ npm，<strong>并且写入系统环境变量</strong>；非全局安装：将会安装在当前定位目录;全局安装可以通过命令行任何地方调用它，本地安装将安装在定位目录的node_modules文件夹下，通过要求调用;</p><p>参考链接：<a href="https://www.jianshu.com/p/115594f64b41" target="_blank" rel="noopener">https://www.jianshu.com/p/115594f64b41</a></p></blockquote><h3 id="3-hexo目录下文件夹的作用："><a href="#3-hexo目录下文件夹的作用：" class="headerlink" title="3.hexo目录下文件夹的作用："></a>3.hexo目录下文件夹的作用：</h3><p>待完成。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
